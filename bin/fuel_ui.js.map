{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/core/Panel.js","src/core/RectPanel.js","src/core/index.js","src/src/index.js","src/utils/index.js"],"names":[],"mappingsdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACZA;AACA;AACA","file":"fuel_ui.js","sourceRoot":"./","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","fuel_ui.Panel = ccui.Layout.extend({\n\n    _drawNode: null,\n    _edgeColor: null,\n    _edgeWidth: null,\n    _pressColor: null,\n    _showShadow: false,\n    _shadowColor: null,\n    _shadowPosition: null,\n\n    ctor: function() {\n        ccui.Layout.prototype.ctor.call(this);\n        this.direction = ccui.ScrollView.DIR_NONE;\n        this.setTouchEnabled(false);\n    },\n\n    /**\n     * Initializes a ccui.ScrollView. Please do not call this function by yourself, you should pass the parameters to constructor to initialize it.\n     * @returns {boolean}\n     */\n    init: function () {\n        return ccui.Layout.prototype.init.call(this);\n    },\n\n    /**\n     * Calls the parent class' onEnter and schedules update function.\n     * @override\n     */\n    onEnter: function () {\n        ccui.Layout.prototype.onEnter.call(this);\n    },\n\n    _initRenderer: function () {\n        ccui.Layout.prototype._initRenderer.call(this);\n\n        this._drawNode = new cc.DrawNode();\n        this._drawNode.setColor(cc.color(255,255,255));\n        this._drawNode.setOpacity(255);\n        this._drawNode.setCascadeColorEnabled(true);\n        this._drawNode.setCascadeOpacityEnabled(true);\n\n        this.addProtectedChild(this._drawNode, 1, 1);\n    },\n\n    _onSizeChanged: function () {\n        ccui.Layout.prototype._onSizeChanged.call(this);\n        var locSize = this._contentSize;\n        this.create(locSize.width,locSize.height);\n    },\n\n    /**\n     * The touch began event callback handler of fuel_ui.Panel.\n     * @param {cc.Touch} touch\n     * @param {cc.Event} event\n     * @returns {boolean}\n     */\n    onTouchBegan: function (touch, event) {\n        var pass = ccui.Layout.prototype.onTouchBegan.call(this, touch, event);\n        if(pass){\n            //Do the magic for change the color\n        }\n        return pass;\n    },\n\n    /**\n     * The touch ended event callback handler of fuel_ui.Panel.\n     * @param {cc.Touch} touch\n     * @param {cc.Event} event\n     */\n    onTouchEnded: function (touch, event) {\n        ccui.Layout.prototype.onTouchEnded.call(this, touch, event);\n        //do the magic for finish the touch\n    },\n\n    /**\n     * The touch canceled event callback of fuel_ui.Panel.\n     * @param {cc.Touch} touch\n     * @param {cc.Event} event\n     */\n    onTouchCancelled: function (touch, event) {\n        ccui.Layout.prototype.onTouchCancelled.call(this, touch, event);\n        //do the magic for cancel the touch\n    },\n\n    create: function(width,height) {\n        this._drawNode.clear();\n        this.createShadow(width,height);\n        this.createGraphicObject(width,height);\n    },\n\n    createGraphicObject: function(width,height) {\n    },\n\n    createShadow: function(width,height) {\n    },\n\n    //Edge Color\n    _getEdgeColor: function() {\n        return this._edgeColor;\n    },\n\n    _setEdgeColor: function(edgeColor) {\n        this._edgeColor = edgeColor;\n    },\n\n    //Edge Width\n    _getEdgeWidth: function() {\n        return this._edgeWidth;\n    },\n\n    _setEdgeWidth: function(edgeWidth) {\n        this._edgeWidth = edgeWidth;\n    },\n\n    //Press Color\n    _getPressColor: function() {\n        return this._pressColor;\n    },\n\n    _setPressColor: function(pressColor) {\n        this._pressColor = pressColor;\n    },\n\n    //Show Shadow\n    _getShowShadow: function() {\n        return this._showShadow;\n    },\n\n    _setShowShadow: function(showShadow) {\n        this._showShadow = showShadow;\n    },\n\n    //Shadow Color\n    _getShadowColor: function() {\n        return this._shadowColor;\n    },\n\n    _setShadowColor: function(shadowColor) {\n        this._shadowColor = shadowColor;\n    },\n\n    //Shadow Position\n    _getShadowPosition: function() {\n        return this._shadowPosition;\n    },\n\n    _setShadowPosition: function(shadowPosition) {\n        this._shadowPosition = shadowPosition;\n    },\n\n    //Is Button\n    _getIsButton: function() {\n        return this._touchEnabled;\n    },\n\n    _setIsButton: function(isButton) {\n        this.setTouchEnabled(isButton);\n    },\n\n    //Draw Node\n    _getDrawNode: function() {\n        return this._drawNode;\n    }\n\n});\n\nvar _p = fuel_ui.Panel.prototype;\n\n// Extended properties\n/** @expose */\n_p.edgeColor;\ncc.defineGetterSetter(_p, \"edgeColor\", _p._getEdgeColor, _p.setEdgeColor);\n/** @expose */\n_p.edgeWidth;\ncc.defineGetterSetter(_p, \"edgeWidth\", _p._getEdgeWidth, _p.setEdgeWidth);\n/** @expose */\n_p.pressColor;\ncc.defineGetterSetter(_p, \"pressColor\", _p._getPressColor, _p.setPressColor);\n/** @expose */\n_p.showShadow;\ncc.defineGetterSetter(_p, \"showShadow\", _p.getShowShadow, _p.setShowShadow);\n/** @expose */\n_p.shadowColor;\ncc.defineGetterSetter(_p, \"shadowColor\", _p.getShadowColor, _p.setShadowColor);\n/** @expose */\n_p.shadowPosition;\ncc.defineGetterSetter(_p, \"shadowPosition\", _p.getShadowPosition, _p.setShadowPosition);\n/** @expose */\n_p.isButton;\ncc.defineGetterSetter(_p, \"isButton\", _p.getIsButton, _p.setIsButton);\n/** @expose */\n_p.drawNode;\ncc.defineGetterSetter(_p, \"drawNode\", _p._getDrawNode, null);\n\n_p = null;\n\n/**\n * allocates and initializes a UILayout.\n * @deprecated since v3.0, please use new ccui.Layout() instead.\n * @return {ccui.Layout}\n */\nccui.Layout.create = function () {\n    return new ccui.Layout();\n};","fuel_ui.RectPanel = fuel_ui.Panel.extend({\n\n    ctor: function() {\n        fuel_ui.Panel.prototype.ctor.call(this);\n    },\n\n    /**\n     * Initializes a ccui.ScrollView. Please do not call this function by yourself, you should pass the parameters to constructor to initialize it.\n     * @returns {boolean}\n     */\n    init: function () {\n        return fuel_ui.Panel.prototype.init.call(this);\n    },\n\n    /**\n     * Calls the parent class' onEnter and schedules update function.\n     * @override\n     */\n    onEnter: function () {\n        fuel_ui.Panel.prototype.onEnter.call(this);\n    },\n\n    _initRenderer: function () {\n        fuel_ui.Panel._initRenderer.call(this);\n    },\n\n    _onSizeChanged: function () {\n        fuel_ui.Panel.prototype._onSizeChanged.call(this);\n    },\n\n    /**\n     * The touch began event callback handler of fuel_ui.Panel.\n     * @param {cc.Touch} touch\n     * @param {cc.Event} event\n     * @returns {boolean}\n     */\n    onTouchBegan: function (touch, event) {\n        var pass = fuel_ui.Panel.prototype.onTouchBegan.call(this, touch, event);\n        if(pass){\n            //Do the magic for change the color\n        }\n        return pass;\n    },\n\n    /**\n     * The touch ended event callback handler of fuel_ui.Panel.\n     * @param {cc.Touch} touch\n     * @param {cc.Event} event\n     */\n    onTouchEnded: function (touch, event) {\n        fuel_ui.Panel.prototype.onTouchEnded.call(this, touch, event);\n        //do the magic for finish the touch\n    },\n\n    /**\n     * The touch canceled event callback of fuel_ui.Panel.\n     * @param {cc.Touch} touch\n     * @param {cc.Event} event\n     */\n    onTouchCancelled: function (touch, event) {\n        fuel_ui.Panel.prototype.onTouchCancelled.call(this, touch, event);\n        //do the magic for cancel the touch\n    },\n\n    createGraphicObject: function(width,height) {\n        fuel_ui.Panel.prototype.createGraphicObject.call(this,width,height);\n        var origin = new cc.Point(0,0);\n        var destination = new cc.Point(width,height);\n        this.drawNode.drawRect(origin, destination, this.color, this.edgeWidth, this.edgeColor);\n    },\n\n    createShadow: function(width,height) {\n        fuel_ui.Panel.prototype.createShadow.call(this,width,height);\n    }\n\n});","/**\n * @file        Main export of the gown.js core library\n * @author      Sebastian Romero <sebastian@fuelpowered.com>\n * @copyright   \n * @license     {@link }\n */\n\n/**\n * @namespace FUEL_UI.core\n */\nmodule.exports = {\n    Panel:          require('./Panel'),\n    RectPanel: \t    require('./RectPanel'),\n};\n","if (typeof cc === 'undefined' && typeof ccui === 'undefined') {\n  console.warn('coco2d-html5.js has to be loaded before loading FUELUI');\n  return;\n}\n\nvar core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// export FUELUI globally.\nglobal.fuel_ui = core;\n","module.exports = {\n    \n};"]}